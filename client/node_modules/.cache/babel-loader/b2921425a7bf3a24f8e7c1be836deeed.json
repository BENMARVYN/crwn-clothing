{"ast":null,"code":"var _jsxFileName = \"/home/ben/React + redux practice/crwn-clothing/src/pages/shop/shop.component.jsx\";\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import {\n//   firestore,\n//   convertCollectionsSnapshotToMap\n// } from '../../firebase/firebase.utils.js';\n// import { updateCollections } from '../../redux/shop/shop.actions';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n// import CollectionPage from '../collection/collection.component';\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n// class ShopPage extends React.Component {\n//   state = {\n//     loading: true\n//   };\n//   unsubscribeFromSnapshot = null;\n//   componentDidMount() {\n//     const { updateCollections } = this.props;\n//     const collectionRef = firestore.collection('collections');\n//     collectionRef.get().then(snapshot => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       updateCollections(collectionsMap);\n//       this.setState({ loading: false });\n//     });\n//   }\n//   render() {\n//     const { match } = this.props;\n//     const { loading } = this.state;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap =>\n//     dispatch(updateCollections(collectionsMap))\n// });\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/ben/React + redux practice/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAiC,KAAKM,KAA5C;AAEAN,IAAAA,0BAA0B;AAC3B;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAER,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEP,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AAvBoC;;AA0BvC,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,0BAA0B,EAAE,MAAMW,QAAQ,CAACX,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CACpB,IADoB,EAEpBW,kBAFoB,CAAP,CAGbP,QAHa,CAAf","sourcesContent":["// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\n// import {\n//   firestore,\n//   convertCollectionsSnapshotToMap\n// } from '../../firebase/firebase.utils.js';\n\n// import { updateCollections } from '../../redux/shop/shop.actions';\n\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n// import CollectionPage from '../collection/collection.component';\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// class ShopPage extends React.Component {\n//   state = {\n//     loading: true\n//   };\n\n//   unsubscribeFromSnapshot = null;\n\n//   componentDidMount() {\n//     const { updateCollections } = this.props;\n//     const collectionRef = firestore.collection('collections');\n\n//     collectionRef.get().then(snapshot => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       updateCollections(collectionsMap);\n//       this.setState({ loading: false });\n//     });\n//   }\n\n//   render() {\n//     const { match } = this.props;\n//     const { loading } = this.state;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap =>\n//     dispatch(updateCollections(collectionsMap))\n// });\n\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);\n\n\n\n\n\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}